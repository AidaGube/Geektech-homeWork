{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Geektech homeWork\\\\react-redux\\\\hw-react\\\\src\\\\pages\\\\ListPages\\\\ListPages.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport List from '../../components/List/List';\nimport Modal from './../../components/Modal/Modal';\nimport AboutPages from './../AboutPages/AboutPages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListPages = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [list, setList] = useState([{\n    id: 1,\n    title: 'hello'\n  }, {\n    id: 2,\n    title: 'hello'\n  }, {\n    id: 3,\n    title: 'hello'\n  }]);\n  const titleRef = useRef();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newList = {\n      id: new Date().getTime(),\n      title: titleRef.current.value\n    };\n    setList([...list, newList]);\n    titleRef.current.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"listButton\",\n      type: \"button\",\n      onClick: () => setIsModalOpen(true),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      setIsModalOpen: setIsModalOpen,\n      handleSubmit: handleSubmit,\n      titleRef: titleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ListPages, \"3DK/w0rl1K/2IYnFlCKgasMU9hk=\");\n_c = ListPages;\nexport default ListPages;\nvar _c;\n$RefreshReg$(_c, \"ListPages\");","map":{"version":3,"names":["React","useRef","useState","List","Modal","AboutPages","jsxDEV","_jsxDEV","ListPages","_s","isModalOpen","setIsModalOpen","list","setList","id","title","titleRef","handleSubmit","e","preventDefault","newList","Date","getTime","current","value","children","className","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Geektech homeWork/react-redux/hw-react/src/pages/ListPages/ListPages.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport List from '../../components/List/List'\r\nimport Modal from './../../components/Modal/Modal';\r\nimport AboutPages from './../AboutPages/AboutPages';\r\n\r\nconst ListPages = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const [list, setList] = useState([\r\n        {\r\n            id: 1,\r\n            title: 'hello'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'hello'\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'hello'\r\n        },\r\n    ])\r\n    const titleRef = useRef()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newList = {\r\n            id: new Date().getTime(),\r\n            title: titleRef.current.value,\r\n        };\r\n        setList([...list, newList]);\r\n        titleRef.current.value = '';\r\n    }\r\n    return (\r\n        <div>\r\n            <button className='listButton' type=\"button\" onClick={() => setIsModalOpen(true)}>\r\n                Добавить элемент\r\n            </button>\r\n            <List list={list} />\r\n            {isModalOpen && <Modal\r\n                setIsModalOpen={setIsModalOpen}\r\n                handleSubmit={handleSubmit}\r\n                titleRef={titleRef}\r\n            />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPages"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,KAAK,MAAM,gCAAgC;AAClD,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAC7B;IACIY,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE;EACX,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE;EACX,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE;EACX,CAAC,CACJ,CAAC;EACF,MAAMC,QAAQ,GAAGf,MAAM,EAAE;EAEzB,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,OAAO,GAAG;MACZN,EAAE,EAAE,IAAIO,IAAI,EAAE,CAACC,OAAO,EAAE;MACxBP,KAAK,EAAEC,QAAQ,CAACO,OAAO,CAACC;IAC5B,CAAC;IACDX,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEQ,OAAO,CAAC,CAAC;IAC3BJ,QAAQ,CAACO,OAAO,CAACC,KAAK,GAAG,EAAE;EAC/B,CAAC;EACD,oBACIjB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAQmB,SAAS,EAAC,YAAY;MAACC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEA,CAAA,KAAMjB,cAAc,CAAC,IAAI,CAAE;MAAAc,QAAA,EAAC;IAElF;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTzB,OAAA,CAACJ,IAAI;MAACS,IAAI,EAAEA;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACnBtB,WAAW,iBAAIH,OAAA,CAACH,KAAK;MAClBO,cAAc,EAAEA,cAAe;MAC/BM,YAAY,EAAEA,YAAa;MAC3BD,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEd,CAAC;AAAAvB,EAAA,CAzCKD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA2Cf,eAAeA,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}